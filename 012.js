
// The sequence of triangle numbers is generated by adding the natural numbers.
// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The 
// first ten terms would be:

//   1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

//     1: 1
//     3: 1,3
//     6: 1,2,3,6
//    10: 1,2,5,10
//    15: 1,3,5,15
//    21: 1,3,7,21
//    28: 1,2,4,7,14,28

// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred
// divisors?

function triangle(n) {
    return (n*(n+1))/2;
}

function primeFactors(n) {
    var factors = [];
    var d = 2;
    while (n > 1) {
        while (n % d === 0) {
            factors.push(d);
            n = n/d;
        }
        d++;
        if (d*d > n && n > 1) {
            factors.push(n);
            break;
        }
    }
    return factors;
}

function numberOfDivisors(n) {
    var primes = primeFactors(n);
    var num = 1;
    while (primes.length) {
        var current = primes.shift();
        var cnt = 1;
        while (current === primes[0] && primes.length) {
            primes.shift();
            cnt++;
        }
        num = num * (cnt + 1);
    }
    return num;
}

function firstTriangle(number) {
    var i = 1;
    while (numberOfDivisors(triangle(i)) <= number) {
        i++;
    }
    return triangle(i);
}


console.log( firstTriangle(500) );
